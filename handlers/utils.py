import re

def extract_number(text):
    match = re.search(r'\b-?\d+(?:\.\d+)?\b', text)
    if match:
        return abs(float(match.group()))
    else:
        return None

def create_listing_caption(data: dict, is_auction: bool = False, is_confirmation: bool = False) -> str:
    caption = (f'üì¶ <b>–ù–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä—É:</b> {data["name"]}\n'
               f'üìù <b>–û–ø–∏—Å:</b> {data["description"]}\n'
               f'üí∂ <b>–°—Ç–∞—Ä—Ç–æ–≤–∞ —Ü—ñ–Ω–∞:</b> {data["price"]} ‚Ç¨\n') 
    if is_auction:
        caption += f'‚è≥ <b>–¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å –∞—É–∫—Ü—ñ–æ–Ω—É:</b> {data["duration"]} —Ö–≤\n'
    if is_confirmation:
        caption += '\n‚ö†Ô∏è <b>–ü—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å –≤–∏—Å—Ç–∞–≤–ª–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É –Ω–∞ –∞—É–∫—Ü—ñ–æ–Ω:</b>'
    return caption

def key_auc_price(auction_id: int) ->str:
    return f"auction:{auction_id}:start_price"

def key_auc_last_user(auction_id: int) -> str:
    return f"auction:{auction_id}:last_user"

def key_auc_status_msg(auction_id: int) -> str:
    return f"auction:{auction_id}:status_message"

def key_auc_end_time(auction_id: int) -> str:
    return f"auction:{auction_id}:end_time"

def key_auc_info_msg(auction_id: int) -> str:
    return f"auction:{auction_id}:info_message"