from aiogram import F, Router, Bot
from aiogram.types import Message, CallbackQuery

from keyboards.inline import menu_kb
from .menu import get_menu_text
from database.models import Group
from create_bot import session_maker, admins

common_router = Router()

@common_router.message(F.new_chat_members)
async def bot_added_to_group(message: Message, bot: Bot):
    for member in message.new_chat_members:
        if member.id == bot.id:
            inviter_id = message.from_user.id
            chat_id = message.chat.id

            if inviter_id not in admins:
                await bot.send_message(chat_id,
                                       "üö´ –õ–∏—à–µ –≤–ª–∞—Å–Ω–∏–∫ –±–æ—Ç–∞ –º–æ–∂–µ –∑–∞–ø—Ä–æ—à—É–≤–∞—Ç–∏ –º–µ–Ω–µ —É –Ω–æ–≤—ñ —á–∞—Ç–∏.")
                await bot.leave_chat(chat_id)
                return  

            async with session_maker() as session:
                group = await session.get(Group, chat_id)
                if not group:
                    session.add(Group(id=chat_id, title=message.chat.title))
                    await session.commit()
                    print(f"–ë–æ—Ç –¥–æ–¥–∞–Ω–∏–π –¥–æ –Ω–æ–≤–æ—ó –≥—Ä—É–ø–∏: {message.chat.title} (ID: {chat_id})")

            welcome_text = ("üëã <b>–í—ñ—Ç–∞—é –≤—Å—ñ—Ö!</b>\n\n"
                "–Ø –≤–∞—à –±–æ—Ç-–ø–æ–º—ñ—á–Ω–∏–∫ –¥–ª—è –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó –ø—Ä–æ–¥–∞–∂—ñ–≤ —Ç–∞ –∞—É–∫—Ü—ñ–æ–Ω—ñ–≤.\n\n"
                "<b>–©–æ —è –≤–º—ñ—é:</b>\n"
                "‚úÖ –°—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ —Ç–∞ –ø—Ä–æ–≤–æ–¥–∏—Ç–∏ –∞—É–∫—Ü—ñ–æ–Ω–∏.\n"
                "‚úÖ –î–æ–ø–æ–º–∞–≥–∞—Ç–∏ –ø—Ä–æ–¥–∞–≤–∞—Ç–∏ —Ç–∞ –∫—É–ø—É–≤–∞—Ç–∏ —Ç–æ–≤–∞—Ä–∏.\n\n"
                "–©–æ–± —Ä–æ–∑–ø–æ—á–∞—Ç–∏, –ø–µ—Ä–µ—Ö–æ–¥—å –≤ –æ—Å–æ–±–∏—Å—Ç—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ –ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É /start.")
            
            await bot.send_message(chat_id, welcome_text)
            break

@common_router.message(F.left_chat_member)
async def bot_left_group(message: Message, bot: Bot):
    if message.left_chat_member.id == bot.id:
        chat_id = message.chat.id

        async with session_maker() as session:
            group = await session.get(Group, chat_id)
            if group:
                await session.delete(group)
                await session.commit()
                print(f"–ë–æ—Ç –±—É–≤ –≤–∏–¥–∞–ª–µ–Ω–∏–π –∑ –≥—Ä—É–ø–∏: {message.chat.title} (ID: {chat_id})")